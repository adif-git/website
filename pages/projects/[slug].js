import React from 'react';
import Head from 'next/head';
import { API_URL } from '../../config/index';
import Header from '../../components/Header/Header';
import Footer from '../../components/Footer/Footer';
import Image from 'next/image';
import 'react-responsive-carousel/lib/styles/carousel.min.css'; // requires a loader
import { Carousel } from 'react-responsive-carousel';

const formatDate = (date) => {
  return new Date(date).toLocaleDateString('en-us', {
    year: 'numeric',
    month: 'short',
    day: 'numeric',
  });
};

export default function ProjectPage({ project: { attributes } }) {
  return (
    <>
      <Head>
        <title>Projects | Adif</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <div className="flex flex-col relative min-w-screen min-h-screen h-full bg-slate-200">
        <div className="flex bg-slate-900">
          <Header />
        </div>
        <div className="flex flex-col flex-auto max-w-7xl mx-auto w-full p-20 my-10 rounded-xl bg-slate-50">
          <div className="">
            <h1 className="font-bold text-6xl mb-5">{attributes.title}</h1>
            <p className="font-semibold text-indigo-500 mb-8 text-xl">
              {attributes.category.data.attributes.name}
            </p>
            <p className="text-md font-semibold text-left italic border-b-2 border-slate-300 pb-2 text-slate-600">
              Last updated: {formatDate(attributes.updatedAt)}
            </p>
          </div>
          <div className="bg-slate-300/50 border-l-8 border-blue-500 pr-10 pl-5 py-4 rounded-md my-10">
            <p className=" text-justify italic font-semibold">
              {attributes.description}
            </p>
          </div>
          <div className="flex flex-row">
            <div className="basis-3/6 p-2 flex-auto">
              <Image
                src={attributes.img.data[0].attributes.formats.large.url}
                alt={attributes.title}
                width={1000}
                height={600}
              />
            </div>
            {/* {attributes.vid.data === null ? null : (
              <div className="flex basis-3/6 p-2 justify-center items-center">
                <video controls width={800} height={600}>
                  <source
                    src={attributes.vid.data[0].attributes.url}
                    type="video/mp4"
                  />
                </video>
                <iframe
                  src={attributes.vid.data[0].attributes.url}
                  title={attributes.title}
                  style={{ width: '100%', height: '90%' }}
                  allow="fullscreen; encrypted-media"
                  allowFullScreen={true}
                  frameBorder="0"
                  sandbox
                ></iframe>
              </div>
            )} */}
          </div>
          <div className="flex">
            <p className="text-justify">{attributes.article}</p>
          </div>
        </div>
        <div className="flex">
          <Footer />
        </div>
      </div>
    </>
  );
}

export async function getStaticPaths() {
  const res = await fetch(`${API_URL}/api/projects`);
  const projects = await res.json();

  const paths = projects.data.map((project) => ({
    params: { slug: project.attributes.slug },
  }));

  return {
    paths,
    fallback: false,
  };
}

export async function getStaticProps({ params: { slug } }) {
  const res = await fetch(
    `${API_URL}/api/projects?populate=*&filters[slug][$eq]=${slug}`
  );
  const project = await res.json();

  console.log();

  return {
    props: {
      project: project.data[0],
    },
  };
}
